---
title: Installing Boomi Data Services for VMware Tanzu on TKGI
owner: Partners
---


This topic describes how to install Boomi Data Services for VMware Tanzu on
VMware Tanzu Kubernetes Grid Integrated (TKGI).


##<a id="download"></a> Download Boomi Data Services for VMware Tanzu (TKGI)

Boomi Data Services for VMware Tanzu (TKGI) is available for download from Tanzu Network.  It is
distributed as a tarred, gzipped archive, named `dell-boomi-pks-<version>.tar.gz`.

This archive contains all of the Kubernetes definition files and Docker container images
that are needed to run Boomi Data Servies for VMware Tanzu.

To unpack the archive, use standard UNIX `tar` commands:

    $ tar -xzvf dell-boomi-pks-$VERSION.tar.gz


##<a id="obtain-cluster-access"></a> Obtain Cluster Access

A VMware TKGI cluster is required to install Boomi Data Services for
VMware Tanzu (TKGI). To obtain access to your cluster, do the following:

  1. Login to VMware TKGI: `tkgi login -a <tkgi-url> -u <username> -p <password> -k`
  2. Update your `~/.kube/config`: `tkgi get-credentials <cluster-name>`
  3. Configure your Kubernetes client: `kubectl config use-context <cluster-name>`


##<a id="prereqs"></a> Installation Prerequisites

To install, you will need the following:

  1. A VMware Tanzu Operations Manager instance

  2. The VMware Tanzu Kubernetes Grid Integrated Service Tile installed to that
     Operations Manager.

  3. The VMware Tanzu Application Service for VMs Tile (Cloud Foundry)
     installed to that Operations Manager.

  4. A Docker Registry; the VMWare Harbor Registry Tile for VMware Tanzu,
     installed via Operations Manager, will suffice.

  5. A TKGI Cluster.

  6. A configured `kubectl` environment.

###<a id="install-helm"> Installing Helm/Tiller (with RBAC)

Boomi Data Services is distributed as a Helm chart, so you will need to
initialize helm on your TKGI cluster if you have not already done so.

First, create a role for Helm/Tiller to use:

    kubectl apply -f helm.yml

Then, install the tiller pod onto your TKGI cluster:

    helm init --wait --service-account tiller --upgrade

###<a id="load-docker-images"> Loading Boomi Data Service Docker Images

Next, load up the Boomi Data Services container images, via an
accessible and properly configured Docker daemon, by running:

    ./loadup name.of.registry.host/library

This will import the container images into your default Docker
daemon, re-tag them so that they can be pushed to your Container
Image Registry, and then push them.

This step must be repeated for each new version of Boomi Data Services.

By default, images will be prefixed with `dell-boomi-` (i.e.,
`dell-boomi-broker`, `dell-boomi-molecule`, etc.).  If you wish to change
this, set the `PRE` environment variable to something appropriate before
running the `loadup` script, and remember to update your Helm `values.yml`
file.

##<a id="deploy-helm-chart"></a> Deploy the Helm Chart

To configure your Boomi Data Services installation, create a `values.yml`
file.  At the very least, you will need to provide your Boomi account
details and credentials.

Here is an example `values.yml`, for a basic configuration, using
TKGI-provisioned NFS storage:

    boomi:
      username:     your-username
      password:     your-password
      account:      BOOMI-ACCOUNT
      subaccounts:  COMMA,SEPARATED,SUB-ACCOUNTS,LIST
      pollInterval: 10
      environment:  your-atom-environment-name
      cloud:        your-atom-cloud-name
      nodes:        1
      terminationWaitSeconds: longer-than-your-longest-batch-job

    broker:
      username: boomi
      password: a-secret-password

    cf:
      api:                 https://api.sys.your.cloud.foundry
      domain:              sys.your.cloud.foundry
      route_client:        gorouter
      route_client_secret: uaa-client-secret-for-gorouter
      username:            admin
      password:            uaa-client-secret-for-admin

    image:
      registry: name.of.registry.host/library

Please refer to the <a href="configuration.html">Boomi Data Services
Configuration Reference</a> for more information on how to configure more
advanced use cases.


    $ helm install --name boomi -f values.yml ./dell-boomi

Helm installs the new release into the current namespace.  To install into a
different namespace, either switch to that namespace, or include the
`--namespace` option in the `helm` command.

After the deployment process completes, the following should appear in the terminal:

    NAME                                    READY  STATUS             RESTARTS  AGE
    hopeful-warbler-dell-boomi-broker-687f845ffd-hzztr  0/2    Init:0/1           0         0s
    hopeful-warbler-dell-boomi-molecule-0               0/1    ContainerCreating  0         0s

    NOTES:
    Congratulations!  You know have a 1-node cluster,
    running in the AtomSphere demo-cloud/demo-cloud environment.

You now have a deployed Helm chart.

You can watch the installation progress by running:

    $ kubectl logs -l app=dell-boomi -l role=broker -c installer
